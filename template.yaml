AWSTemplateFormatVersion: '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31
  - Name: DatadogServerless
    Parameters:
      stackName: !Ref "AWS::StackName"
      addLayers: false
      env: !Ref EnvName
      site: datadoghq.eu
Description: >
  The tranmere web player search stack

Globals:
  Function:
    Timeout: 5
    AutoPublishAlias: live

Parameters:
  Deployment:
    Type: String
    Default: Canary10Percent5Minutes
  S3BucketName:
    Type: String
  OpenAPIFile:
    Type: String
    Default: openapi.yaml
  EnvName:
    Type: String
    Default: sit1
    Description: The name of the environment to deploy to
    AllowedValues:
      - local
      - ci1      
      - sit1
      - pre1
      - prod1

Resources:     

  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Cors:
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: true  
      StageName: Prod
      Name: PlayerSearch
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: 
              Fn::Join:
              - ''
              - - s3://
                - Ref: S3BucketName
                - /
                - Ref: OpenAPIFile

  TranmereWebPlayerSearch:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: TranmereWebPlayerSearch.handler
      Runtime: nodejs14.x
      MemorySize: 256
      DeploymentPreference:
        Type: !Ref Deployment
        Alarms:
          - !Ref AliasErrorMetricGreaterThanZeroAlarm
          - !Ref LatestVersionErrorMetricGreaterThanZeroAlarm
      Tracing: PassThrough  
      Environment:
        Variables:
          EnvironmentName: !Ref EnvName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: TranmereWebPlayerSeasonSummaryTable
        - DynamoDBCrudPolicy:
            TableName: TranmereWebPlayerTable          
      Events:
        PageRequest:
          Type: Api
          Properties:
            Path: /
            RestApiId: !Ref RestApi
            Method: get

  AliasErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      AlarmActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      OKActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      InsufficientDataActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub "${ TranmereWebPlayerSearch}:live"
        - Name: FunctionName
          Value: !Ref TranmereWebPlayerSearch
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
  LatestVersionErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      AlarmActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      OKActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      InsufficientDataActions:
        - !ImportValue cloudwatch-notifications-prod-SlackSNSTopic
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Ref TranmereWebPlayerSearch.Version
        - Name: FunctionName
          Value: !Ref TranmereWebPlayerSearch
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0

  # This shouldn't be necerssary, but API Gateway often seems to lack permission on the lambda when using swagger definitions
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      SourceArn: 
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/GET/
      FunctionName: !Ref TranmereWebPlayerSearch
      Principal: apigateway.amazonaws.com

  StagingBasePathMapping:
    DependsOn: RestApiProdStage
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: player-search
      DomainName: !Sub "api.${EnvName}.tranmere-web.com"
      RestApiId: !Ref RestApi
      Stage: Prod

Outputs:
  Endpoint:
    Description: "API Gateway endpoint URL the endpoint"
    Value: !Sub "https://api.${EnvName}.tranmere-web.com/player-search/"
